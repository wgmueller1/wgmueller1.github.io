<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Nullspace</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2018-02-06T09:20:36-05:00</updated>
<id>/</id>
<author>
  <name>Graham Mueller</name>
  <uri>/</uri>
  <email>wgmueller@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Boxing's Grandmasters Part II]]></title>
  <link rel="alternate" type="text/html" href="/boxing/" />
  <id>/boxing</id>
  <updated>2018-01-02T00:00:00-00:00</updated>
  <published>2018-01-02T00:00:00-05:00</published>
  
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Contents&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#best-of-a-generation&quot; id=&quot;markdown-toc-best-of-a-generation&quot;&gt;Best of a generation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h2 id=&quot;best-of-a-generation&quot;&gt;Best of a generation&lt;/h2&gt;

&lt;html&gt;
&lt;head&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/d3/4.6.0/d3.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js&quot;&gt;&lt;/script&gt;
	&lt;style&gt;
	.axis-x path {
		stroke: #000;
	}

	.line {
		fill: none;
		stroke-width: 1.5px;
		stroke-linejoin: &quot;round&quot;;
		stroke-linecap: &quot;round&quot;;
	}

	.line:hover {
		stroke-width: 6px;
	}

	.legend {
	    font-size: 12px;
	    font-weight: bold;
	    text-anchor: middle;
	}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;svg width=&quot;800&quot; height=&quot;400&quot; id=&quot;chart1&quot;&gt;&lt;/svg&gt;
	&lt;svg width=&quot;800&quot; height=&quot;400&quot; id=&quot;chart2&quot;&gt;&lt;/svg&gt;
	&lt;svg width=&quot;800&quot; height=&quot;400&quot; id=&quot;chart3&quot;&gt;&lt;/svg&gt;
	&lt;svg width=&quot;800&quot; height=&quot;400&quot; id=&quot;chart4&quot;&gt;&lt;/svg&gt;
	&lt;svg width=&quot;800&quot; height=&quot;400&quot; id=&quot;chart5&quot;&gt;&lt;/svg&gt;
	&lt;script&gt;
	function loadchart(filename,divid,d1,d2){
	//define chart margins
	let svg = d3.select(divid),
		margin = {top: 50, right: 150, bottom: 40, left: 50},
		width = svg.attr(&quot;width&quot;) - margin.left - margin.right,
		height = svg.attr(&quot;height&quot;) - margin.top - margin.bottom,
		g = svg.append(&quot;g&quot;).attr(&quot;transform&quot;, &quot;translate(&quot; + margin.left + &quot;,&quot; +margin.top + &quot;)&quot;);

	//define time format
	//let parseYear = d3.timeParse(&quot;%Y&quot;);
    let parseTime = d3.timeParse(&quot;%Y-%m-%d&quot;);
	//define scales
	let x = d3.scaleTime().range([0, width]),
		y = d3.scaleLinear().range([height, 0]),
		//color scale
		z = d3.scaleOrdinal(d3.schemeCategory20);


	//define line generator
	let line = d3.line()
	 	.defined(function(d) { return d.subscriptionCount != 0; }) 
		.x(function(d) { return x(d.date); })
		.y(function(d) { return y(d.subscriptionCount); });

	//load data
	d3.csv(filename, type, function(error, data) {
		if(error) throw error;
		//parse data
		let countries = data.columns.slice(1).map(function(id) {
			return {
				id: id,
				values: data.map(function(d) {
					return {date: d.date, subscriptionCount: d[id]};
				})
			};
		});

	  /*var tmp=_.map(data, function(b) {return Object.keys(_.omit(b,'date')).reduce(function(max,key){
		  return (max === undefined || b[key] &gt; b[max]) ? +key : max;
		})});*/
		
	  maxElo=_.map(data,function(b){return {'date':b.date, 'max':_.max(_.omit(b,'date')),'id': _.max(Object.keys(_.omit(b,'date')), function (o) { return _.omit(b,'date')[o]; })
			}
		})
	  
		//define x axis
		//maxElo=_.max(_.map(data, function(d){ return _.values(_.omit(d, 'date'));}))

		x.domain(d3.extent(data, function(d) { return d.date; }));
		var noZeroes = countries.map(function(c) { return c.values})
		var vals=noZeroes.map(function(d){return d.map(function(x){return x.subscriptionCount});})

		function flatten(arr) {
		  return arr.reduce(function (flat, toFlatten) {
		    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);
		  }, []);
		}

		nz=flatten(vals).filter(function(d){return d!=0});
		//d3.min(noZeroes, function(d) {return d.houseValues; })
		//define y axis
		y.domain([
			d3.min(nz),
			d3.max(countries, function(c) { return d3.max(c.values, function(d) { return d.subscriptionCount; }); })
		]);

		//x.domain([parseTime(d1),parseTime(d2)])

		//define color scale
		z.domain(countries.map(function(c) { return c.id; }));

	 // Nest the entries by symbol
	    var dataNest = d3.nest()
	        .key(function(d) {return d.id;})
	        .entries(data);

	    // set the colour scale
	    var color = d3.scaleOrdinal(d3.schemeCategory10);

	    legendSpace = height/10 // spacing for the legend
	 
	    /*
	    g.append(&quot;svg:rect&quot;)
		     .attr(&quot;x&quot;, x(parseTime('2005-01-01')))
		     .attr(&quot;y&quot;, 0)
		     .attr(&quot;width&quot;, x(parseTime('2010-10-10')))
		     .attr(&quot;height&quot;, height)
		     .attr(&quot;alpha&quot;,0.2)
		     .attr(&quot;fill&quot;, &quot;#FEF0DB&quot;);
		     */

		//append x axis
		g.append(&quot;g&quot;)
			.attr(&quot;class&quot;, &quot;axis axis-x&quot;)
			.attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
			.call(d3.axisBottom(x));

		//append y axis
		g.append(&quot;g&quot;)
			.attr(&quot;class&quot;, &quot;axis axis-y&quot;)
			.call(d3.axisLeft(y))
			.append(&quot;text&quot;)
			.attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
			.attr(&quot;y&quot;, -50)
			.attr(&quot;x&quot;, -125)
			.attr(&quot;dy&quot;, &quot;0.9em&quot;)
			.attr(&quot;fill&quot;, &quot;#000&quot;)
			.text(&quot;Elo Rating&quot;);
        

		//append country data to svg
		let country = g.selectAll(&quot;.country&quot;)
			.data(countries)
			.enter()
			.append(&quot;g&quot;)
			.attr(&quot;class&quot;, &quot;country&quot;);
		


		eras=[]
		for(var i = 0; i &lt; maxElo.length-1; i++) {
			curr_id=maxElo[i].id
			next_id=maxElo[i+1].id
			if(i==0){
				startd=maxElo[i].date
			}
			else if(curr_id!=next_id){
				end=maxElo[i+1].date
				id=maxElo[i].id
				eras.push({'startd':startd,'end':end,'id':id})
				startd=maxElo[i+1].date
			}
			else if(i==maxElo.length-2){
				end=maxElo[i+1].date
				id=maxElo[i+1].id
				eras.push({'startd':startd,'end':end,'id':id})
				console.log(end)
			}
			

		}
		console.log(eras)
		
		for(var i=0; i&lt; eras.length;i++){
	   		 g.append(&quot;svg:rect&quot;)
		     .attr(&quot;x&quot;, x(eras[i].startd))
		     .attr(&quot;y&quot;, 0)
		     .attr(&quot;width&quot;, x(eras[i].end)-x(eras[i].startd))
		     .attr(&quot;height&quot;, height)
		     .attr(&quot;opacity&quot;,0.2)
		     .attr(&quot;fill&quot;, z(eras[i].id))
		     .attr(&quot;class&quot;,&quot;era_bar&quot;)
		     .attr(&quot;id&quot;, eras[i].id)
		    // .attr(&quot;mouseover&quot;,era_select(eras,i))
		}

		//append country path to svg
		country.append(&quot;path&quot;)
			.attr(&quot;class&quot;, &quot;line&quot;)
      			.attr(&quot;d&quot;, function(d) { return line(d.values); })
			.style(&quot;stroke&quot;, function(d) { return z(d.id); })
			.style(&quot;stroke-linecap&quot;, &quot;round&quot;)
			.attr(&quot;id&quot;,function(d){ return d.id})
	
		//append country labels to svg
		country.append(&quot;text&quot;)
			.datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })
			//.attr(&quot;transform&quot;, function(d) { return &quot;translate(&quot; + x(d.value.date) + &quot;,&quot; + y(d.value.subscriptionCount) + &quot;)&quot;; })
			.attr(&quot;y&quot;, function(d,i){return (legendSpace/2)+i*legendSpace;})
			.attr(&quot;x&quot;, width+(margin.right/2)+5)
			.style(&quot;fill&quot;, function(d) { // Add the colours dynamically
                return d.color = z(d.id); })
			.attr(&quot;class&quot;, &quot;legend&quot;) 
			.text(function(d) { return d.id; })
			.on(&quot;mouseover&quot;, function(d, i) {
			 d3.select(divid).select(&quot;[id='&quot; + d.id + &quot;']&quot;) .style(&quot;stroke-width&quot;, &quot;6px&quot;);
			 d3.select(divid).selectAll(&quot;rect[id='&quot; + d.id + &quot;']&quot;).style(&quot;opacity&quot;, 0.5);
			})
			.on(&quot;mouseout&quot;, function(d, i) {
			 d3.select(divid).select(&quot;[id='&quot; + d.id + &quot;']&quot;) .style(&quot;stroke-width&quot;, &quot;1.5px&quot;);
			 d3.select(divid).selectAll(&quot;rect[id='&quot; + d.id + &quot;']&quot;).style(&quot;opacity&quot;, 0.2);
			})



	  // Add the Legend
	 /*data.forEach( function(d,i){
        country.append(&quot;text&quot;)
            .attr(&quot;x&quot;, (legendSpace/2)+i*legendSpace)  // space legend
            .attr(&quot;y&quot;, height + (margin.bottom/2)+ 5)
            .attr(&quot;class&quot;, &quot;legend&quot;)    // style the legend
            .style(&quot;fill&quot;, function() { // Add the colours dynamically
                return d.color = color(d.key); })
            .text(d.key); 
        });*/

		
	});

	//bind with multiseries data
	function type(d, _, columns) {
		d.date = parseTime(d.date);
		//iterate through each column
		for(var i = 1, n = columns.length, c; i &lt; n; ++i)
			//bind column data to year
			d[c = columns[i]] = +d[c];
			return d;
	}




	//define chart title
	let title = svg.append(&quot;g&quot;)
		.attr(&quot;class&quot;, &quot;title&quot;);
	title.append(&quot;text&quot;)
		.attr(&quot;x&quot;, (width/1.75))
		.attr(&quot;y&quot;, 20)
		.attr(&quot;text-anchor&quot;, &quot;middle&quot;)
		.style(&quot;font&quot;, &quot;20px sans-serif&quot;)
		.text(&quot;Elo ratings&quot;);

  }
  loadchart('/assets/data/boxing2010s.csv',&quot;#chart1&quot;,'2005-01-01','2017-01-01');
  loadchart('/assets/data/boxing2000s.csv',&quot;#chart2&quot;,'1995-01-01','2010-01-01');
  loadchart('/assets/data/boxing1990s.csv',&quot;#chart3&quot;,'1985-01-01','2000-01-01');
  loadchart('/assets/data/boxing1980s.csv',&quot;#chart4&quot;,'1975-01-01','1990-01-01')
  loadchart('/assets/data/boxing1970s.csv',&quot;#chart5&quot;,'1975-01-01','1990-01-01')
	&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;


  &lt;p&gt;&lt;a href=&quot;/boxing/&quot;&gt;Boxing's Grandmasters Part II&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on January 02, 2018.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Deep Learning for Time Series, pt. 1]]></title>
  <link rel="alternate" type="text/html" href="/deeptime/" />
  <id>/deeptime</id>
  <updated>2016-07-09T00:00:00-00:00</updated>
  <published>2016-07-07T00:00:00-04:00</published>
  
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Contents&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#convolutional-neural-networks&quot; id=&quot;markdown-toc-convolutional-neural-networks&quot;&gt;Convolutional Neural Networks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data&quot; id=&quot;markdown-toc-data&quot;&gt;Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#example&quot; id=&quot;markdown-toc-example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-happening-inside-the-network&quot; id=&quot;markdown-toc-what-is-happening-inside-the-network&quot;&gt;What is happening inside the network?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#results&quot; id=&quot;markdown-toc-results&quot;&gt;Results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;p&gt;Time series data occur almost everywhere.  Much of the recent hype (mostly deserved) around deep learning architectures has been around the state-of-the-art performance produced in the fields of computer vision, natural language processing, and bioinformatics.  Much of “deep learning” is a rebranding of neural networks.  During my second year of graduate school, I became interested in applying machine learning to time series data which I planned to use as my dissertation topic.  I ended up studying reinforcement learning in social graphs, but I’ll save that for another time.  In this tutorial, I’ll discuss applying convolutional neural networks to time series data.&lt;/p&gt;

&lt;h3 id=&quot;convolutional-neural-networks&quot;&gt;Convolutional Neural Networks&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Convolutional Neural Networks (CNN) are biologically-inspired variants of MLPs. From Hubel and Wiesel’s early work on the cat’s visual cortex, we know the visual cortex contains a complex arrangement of cells. These cells are sensitive to small sub-regions of the visual field, called a receptive field. The sub-regions are tiled to cover the entire visual field. These cells act as local filters over the input space and are well-suited to exploit the strong spatially local correlation present in natural images.&lt;sup&gt;&lt;a href=&quot;#myfootnote1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
    &lt;center&gt;&lt;img src=&quot;/images/Typical_cnn.png&quot; /&gt;&lt;br /&gt;
    &lt;em&gt;Typical CNN architecture&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
CNNs may be applied to multivariate time series.  It can be useful to think of a time series as a one-dimensional image.  You don’t need to use an image of the time series as input to the CNN!  I’ve seen several papers which used this approach which seems weird, you just need to use a 1-dimensional convolutional layer instead of the typical 2-D layer.  In the 1D domain, a convolution can be viewed as a filter, capable of removing outliers, filtering the data or acting as a feature detector, defined to respond maximally to specific temporal sequences within the filter length of the convolution. 
&lt;br /&gt;
&lt;br /&gt;
To better understand this, consider the definition of a 1-D convolution.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;y_{k} = \sum_{n = 0}^{N - 1}h_{n}\,\cdot\,x_{k-n}&lt;/script&gt;

&lt;p&gt;There are two input signals, &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;h&lt;/em&gt; and &lt;em&gt;N&lt;/em&gt; is the length of &lt;em&gt;h&lt;/em&gt;. The output vector is &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;h&lt;/em&gt; is known as the kernel or convolution filter and &lt;em&gt;x&lt;/em&gt; is the input data.  The subscripts denote the &lt;em&gt;n&lt;/em&gt;th element of the vector. Here is an example of how the convolution is calculated when &lt;em style=&quot;line-height: 1.5em;&quot;&gt;h&lt;/em&gt; has three elements:&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$&lt;br /&gt;\begin{aligned}&lt;br /&gt;y_{0} &amp;amp; = h_{0} \cdot x_{0} \\&lt;br /&gt;y_{1} &amp;amp; = h_{1} \cdot x_{0} + h_{0} \cdot x_{1} \\&lt;br /&gt;y_{2} &amp;amp; = h_{2} \cdot x_{0} + h_{1} \cdot x_{1} + h_{0} \cdot x_{2} \\&lt;br /&gt;y_{3} &amp;amp; = h_{2} \cdot x_{1} + h_{1} \cdot x_{2} + h_{0} \cdot x_{3} \\&lt;br /&gt;\vdots&lt;br /&gt;\end{aligned}&lt;br /&gt;$$&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
The filter [&lt;script type=&quot;math/tex&quot;&gt;h_2 h_1 h_0&lt;/script&gt;] is slid along the elements of &lt;em&gt;x&lt;/em&gt; and at each step we multiply the elements and sum them: the result will be the corresponding element of the output &lt;em&gt;y&lt;/em&gt; vector.  Here is a concrete example:
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$&lt;br /&gt;\begin{aligned}&lt;br /&gt;x &amp;amp; = \left[&lt;br /&gt;\begin{array}{c} 1 \, 2 \, 1 \, 3&lt;br /&gt;\end{array}&lt;br /&gt;\right]&lt;br /&gt;\\&lt;br /&gt;h &amp;amp; = \left[&lt;br /&gt;\begin{array}{c}&lt;br /&gt;2 \, 0 \, 1&lt;br /&gt;\end{array}&lt;br /&gt;\right]&lt;br /&gt;\end{aligned}&lt;br /&gt;\\&lt;br /&gt;\begin{array}{c|cccccccc|r}&lt;br /&gt;k &amp;amp; \it{0} &amp;amp; \it{0} &amp;amp; 1 &amp;amp; 2 &amp;amp; 1 &amp;amp; 3 &amp;amp; \it{0} &amp;amp; \it{0} &amp;amp; \it{y_{k}}\\&lt;br /&gt;\hline&lt;br /&gt;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; 2 \cdot 1 = 2\\&lt;br /&gt;1 &amp;amp; &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; 2 \cdot 2 = 4\\&lt;br /&gt;2 &amp;amp; &amp;amp; &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; &amp;amp; &amp;amp; &amp;amp; 2 \cdot 1 + 1 \cdot 1 = 3\\&lt;br /&gt;3 &amp;amp; &amp;amp; &amp;amp; &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; &amp;amp; &amp;amp; 2 \cdot 3 + 1 \cdot 2 = 8\\&lt;br /&gt;4 &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; &amp;amp; 1 \cdot 1 = 1\\&lt;br /&gt;5 &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; &amp;amp; 1 &amp;amp; 0 &amp;amp; 2 &amp;amp; 1 \cdot 3 = 3\\&lt;br /&gt;\end{array}&lt;br /&gt;$$&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
It is easy to see that a simple moving average is a special case of a convolution using the following kernel:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$$&lt;br /&gt;h = \left[&lt;br /&gt;\begin{array}{c} \dfrac{1}{N} \, \dfrac{1}{N} \, ... \, \dfrac{1}{N}\, \dfrac{1}{N}\end{array}&lt;br /&gt;\right]&lt;br /&gt;$$&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Hopefully, this gives some intuition as to what a one-dimensional convolution does. A 1-dimensional convolution applied to multiple input signals creates a linear combination of the filtered inputs at each time step.&lt;/p&gt;

&lt;h3 id=&quot;data&quot;&gt;Data&lt;/h3&gt;

&lt;p&gt;I’m going to use the UCI Machine Learning &lt;a href=&quot;https://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones&quot;&gt;Human Activity Recognition dataset&lt;/a&gt; for this example.  The dataset consists of sensor data recorded from 30 subjects performing activities of daily living, specifically, WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING.  The data was collected from 30 individuals who wore a Samsung Galaxy S II on their waist.  The sampling rate was 50Hz and sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window).  If you don’t care about any of this and just want an input into your blackbox, we have 128 observations of a 9-dimensional time series with 6 unique classes.&lt;/p&gt;

&lt;p&gt;
    &lt;center&gt;&lt;img src=&quot;/images/raw.png&quot; /&gt;&lt;br /&gt;
    &lt;em&gt;De-noised sensor data from mobile phone&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;p&gt;I’m a big fan of the neural networks library &lt;a href=&quot;http://keras.io&quot; target=&quot;_blank&quot;&gt;Keras&lt;/a&gt;.  Keras can run on top of the deep learning libraries Theano and Tensorflow and makes prototyping neural networks very easy.  Here I’ll use Keras to build a convolutional neural network to predict the activities from the sensor data provided by Human Activity Recognition dataset.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.layers.core&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flat&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.layers.convolutional&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Convolution1D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxPooling1D&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#set parameters &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nb_filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#number of features to learn&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filter_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#number of time steps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hidden_dims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nb_epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_sensors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subsample_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Convolution1D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb_filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;filter_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;subsample_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsample_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;border_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'same'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# we use standard max pooling (halving the output of the previous layer):&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxPooling1D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# We flatten the output of the conv layer,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# so that we can add a vanilla dense layer:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Flatten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden_dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Activation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'softmax'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rmsprop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xtrain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ytrain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb_epoch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb_epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_accuracy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!--
After training the model, we can look at the output of each layer using the following code to get a better sense of what is happening inside the neural network.  In this case, the convolutional layer maps the raw input into 64 seperate time series each of length 64 and the max pooling layer condenses these into a single time series of length 64.  



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;seaborn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;get_activations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learning_phase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,])&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#the following plots the first 32 activation outputs &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (the middle plot in the figure below)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#t = np.arange(0, 1, 0.01)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xtrain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# same result as above&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:])])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'off'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;img src=&quot;/images/cnn_filters.png&quot;&gt;
--&gt;

&lt;h3 id=&quot;what-is-happening-inside-the-network&quot;&gt;What is happening inside the network?&lt;/h3&gt;

&lt;p&gt;Here are a few examples of some well known filters from digital signal processing:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.dspguide.com/graphics/F_6_3.gif&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;High and low pass filters remove certain frequencies from the original signal.  You can think of the high-pass filter as removing any underlying trend in the signal and the low-pass filter as smoothing the signal to extract the trend.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.dspguide.com/graphics/F_6_4.gif&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The derivative of an input signal can be approximated by convolving the derivative of a Gaussian Filter or by using a discrete derivative filter (as shown above).  Since we typically use a max pooling layer after a convolutional layer, we are able to identify the maximum value of the derivative over the time interval of the input.  Inverting attenuators flip the signal and enable us to extract minimum values of the signal’s derivative using a max pooling layer. 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;After training the model, we can look at some of the learned filters to get a sense of what types of features the CNN extracts.&lt;/p&gt;

&lt;div class=&quot;container&quot; style=&quot;inline-block&quot;&gt;
    &lt;figure&gt;
    &lt;img src=&quot;/images/learned_derivative.png&quot; width=&quot;300&quot; /&gt;
    &lt;img src=&quot;/images/learned_high_pass.png&quot; width=&quot;300&quot; /&gt;
    &lt;/figure&gt;   
&lt;/div&gt;

&lt;p&gt;The filter on the left is learned for the y-axis acceleration and looks very close to a derivative filter.  The filter on the right is similar to a high-pass filter and was learned for the g1 gyroscope axis.  Some of the other filters aren’t as obvious, however, it appears that many of the learned filters are similar to well known techniques from signal processing.&lt;/p&gt;

&lt;div class=&quot;container&quot; style=&quot;inline-block&quot;&gt;
    &lt;figure&gt;
    &lt;img src=&quot;/images/filters.png&quot; width=&quot;300&quot; /&gt;
    &lt;img src=&quot;/images/filters2.png&quot; width=&quot;300&quot; /&gt;
    &lt;/figure&gt;   
&lt;/div&gt;

&lt;p&gt;Images from &lt;a href=&quot;http://www.dspguide.com&quot;&gt;http://www.dspguide.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;Test set summary:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class   precision    recall  f1-score   support
0         0.98      0.92      0.95       496
1         0.95      0.94      0.94       471
2         0.89      1.00      0.94       420
3         0.86      0.92      0.89       491
4         0.96      0.87      0.91       532
5         1.00      1.00      1.00       537

total      0.94      0.94      0.94      2947
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Training set summary:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class   precision   recall  f1-score   support

0         1.00      1.00      1.00      1226
1         1.00      1.00      1.00      1073
2         1.00      1.00      1.00       986
3         0.91      1.00      0.95      1286
4         1.00      0.91      0.95      1374
5         1.00      1.00      1.00      1407

total     0.98      0.98      0.98      7352
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A 1-layer convolutional + max pooling neural network achieves 94% accuracy with somewhat arbitrary hyperparameters (I choose the parameters to help simplify the visualizations of each of the activations.) This is a good start, but we can improve performance by adding additional layers.  In part 2, I will discuss adding recurrent layers in order to better capture the temporal dynamics.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a name=&quot;myfootnote1&quot;&gt;1&lt;/a&gt;: http://deeplearning.net/tutorial/lenet.html&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/deeptime/&quot;&gt;Deep Learning for Time Series, pt. 1&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on July 07, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Boxing's Grandmasters]]></title>
  <link rel="alternate" type="text/html" href="/grandmaster/" />
  <id>/grandmaster</id>
  <updated>2016-07-31T00:00:00-00:00</updated>
  <published>2015-12-05T00:00:00-05:00</published>
  
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Contents&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#elo-rating-system&quot; id=&quot;markdown-toc-elo-rating-system&quot;&gt;ELO rating system&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data&quot; id=&quot;markdown-toc-data&quot;&gt;Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rankings&quot; id=&quot;markdown-toc-rankings&quot;&gt;Rankings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;p&gt;As a lifelong boxing fan and someone whose everyday job involves analyzing large amounts of data, I thought it would be interesting to apply some quantitative analysis to a sport which has many subjective aspects to it.&lt;/p&gt;

&lt;h2 id=&quot;elo-rating-system&quot;&gt;ELO rating system&lt;/h2&gt;

&lt;p&gt;The Elo rating system is a method for calculating the relative skill levels of players in competitor-versus-competitor games.   The difference in the ratings between two players serves as a predictor of the outcome of a match. Two players with equal ratings who play against each other are expected to score an equal number of wins. 
&lt;br /&gt;
&lt;br /&gt;
If Player A has a rating of &lt;script type=&quot;math/tex&quot;&gt;{\displaystyle R_{A}}&lt;/script&gt; and Player B a rating of &lt;script type=&quot;math/tex&quot;&gt;{\displaystyle R_{B}}&lt;/script&gt;, the exact formula (using the logistic curve) for the expected score of Player A is&lt;/p&gt;

&lt;center&gt;
$${\displaystyle E_{A}={\frac {1}{1+10^{(R_{B}-R_{A})/400}}}}$$
&lt;/center&gt;

&lt;p&gt;Similarly the expected score for Player B is&lt;/p&gt;
&lt;center&gt;
$${\displaystyle E_{B}={\frac {1}{1+10^{(R_{A}-R_{B})/400}}}}$$
&lt;/center&gt;

&lt;p&gt;This could also be expressed by&lt;/p&gt;
&lt;center&gt;
$${\displaystyle E_{A}={\frac {Q_{A}}{Q_{A}+Q_{B}}}} $$
&lt;/center&gt;
&lt;p&gt;and&lt;/p&gt;

&lt;center&gt;
$${\displaystyle E_{B}={\frac {Q_{B}}{Q_{A}+Q_{B}}}}$$
&lt;/center&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;{\displaystyle Q_{A}=10^{R_{A}/400}}&lt;/script&gt; and  &lt;script type=&quot;math/tex&quot;&gt;{\displaystyle Q_{B}=10^{R_{B}/400}}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
A player whose rating is 100 points greater than their opponents is expected to win 64% of the time; if the difference is 200 points, then the expected probability of winning for the stronger player is 76%.  This property of the Elo system allows us to compare fighters of different generations in fantasy match-ups.&lt;/p&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;Boxrec is one source of historical boxing records, though incomplete, it is a good source for historical rankings, fighter biographical data, and match outcomes.  Boxrec even has their own ranking system, which is described here.  For this analysis, I used data from Boxrec to calculate the various rankings.  Keep in mind Boxrec is incomplete and my sample is likely missing records and only goes until December 2014.&lt;/p&gt;

&lt;h2 id=&quot;rankings&quot;&gt;Rankings&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Rank&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fighter&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo Max&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sugar Ray Robinson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2069.52&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Harry Greb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2052.88&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Benny Leonard&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2019.76&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Henry Armstrong&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2010.28&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Willie Pep&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1978.91&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Joe Louis&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1975.84&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Archie Moore&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1975.61&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Freddie Steele&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1963.16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ezzard Charles&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1962.89&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Barney Ross&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1947.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ike Williams&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1946.65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kid Gavilan&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1933.69&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;13.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Freddie Miller&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1933.29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tony Canzoneri&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1932.09&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mickey Walker&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1924.69&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lou Ambers&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1923.47&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Carlos Monzon&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1920.35&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;18.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tommy Loughran&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1918.15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;19.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Young Corbett III&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1916.57&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;20.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Muhammad Ali&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1909.32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;21.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ceferino Garcia&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1907.26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jose Napoles&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1900.59&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bobo Olson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1899.97&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;24.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Duilio Loi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1898.70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;25.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Maxie Rosenbloom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1897.43&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Rank&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fighter&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo Average&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sugar Ray Robinson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1855.00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Harry Greb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1817.61&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Willie Pep&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1806.41&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Henry Armstrong&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1759.86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Archie Moore&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1756.91&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Joe Louis&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1739.19&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Holman Williams&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1732.01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Maxie Rosenbloom&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1723.70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Luis Manuel Rodriguez&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1721.78&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tony Canzoneri&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1719.02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Freddie Miller&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1716.27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ezzard Charles&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1715.72&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;13.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lew Tendler&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1712.23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kid Gavilan&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1710.57&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kid Chocolate&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1703.23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Young Stribling&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1702.78&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ike Williams&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1701.01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;18.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Benny Leonard&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1699.89&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;19.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Emile Griffith&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1699.42&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;20.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lou Ambers&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1689.37&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;21.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jackie Fields&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1687.93&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Tommy Gibbons&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1687.08&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bobo Olson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1685.10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;24.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Wesley Ramey&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1684.10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;25.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Muhammad Ali&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1682.48&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Sugar Ray Robinson is widely considered to the greatest pound for pound fighter and his Elo rating reflects that.  The top 25 largely consists of fighters before the 1970s with the exception of Muhammad Ali.  Elo ratings can exhibit an increase (inflation) or decrease (deflation) in the average player rating over time.  Boxing has decreased in popularity over time.&lt;/p&gt;

&lt;p&gt;Highest Rated Bouts:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fighter&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Record&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Opponent&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Record&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jake LaMotta&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1845.24&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;78-14-3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sugar Ray Robinson (W,TKO)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2058.42&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;120-1-2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1951-02-14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bobo Olson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1885.60&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;71-8-0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sugar Ray Robinson (W,KO)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2014.54&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;137-4-2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1956-05-18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Sugar Ray Robinson (W,KO)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2003.29&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;136-4-2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bobo Olson&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1896.84&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;71-7-0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1955-12-09&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Joe Louis&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1966.90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;58-1-0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ezzard Charles (W,UD)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1918.10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;66-5-1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1950-09-27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Henry Armstrong (D,PTS)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1987.04&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;106-12-6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ceferino Garcia&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1896.12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;112-25-12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1940-03-01&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Worst Mismatches:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Fighter&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Record&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Opponent&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Elo&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Record&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Al Benedict&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;985.94&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10-26-0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Harry Greb (W,TKO)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1836.32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;61-2-2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Willie Pep (W,PTS)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1898.36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;161-4-1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kenny Leach&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1040.90&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3-14-0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Willie Pep (W,PTS)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1872.37&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;185-6-1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mario Eladio Colon&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1043.31&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15-47-8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Johnny Cockfield&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10-84-9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;867.80&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Chalky Wright (W,TKO)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1774.65&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;153-34-18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Archie Moore (W,RTD)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1967.89&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;178-21-9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;George Abinet&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1073.68&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6-14-1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


  &lt;p&gt;&lt;a href=&quot;/grandmaster/&quot;&gt;Boxing's Grandmasters&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on December 05, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Spectral clustering]]></title>
  <link rel="alternate" type="text/html" href="/spectral-clustering/" />
  <id>/spectral-clustering</id>
  <published>2014-10-04T00:00:00-04:00</published>
  <updated>2014-10-04T00:00:00-04:00</updated>
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Spectral clustering is an approach to clustering data in which the spectrum (eigenvalues) of a similarity matrix is used to perform dimension reduction.  Given a symmetric similarity or adjacency matrix, &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;.  The Laplacian matrix is equal to the&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;L=D-A&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt; is equal to the degree matrix.&lt;/p&gt;

&lt;div style=&quot;background-color:rgba(0, 0, 0, 0.0470588); vertical-align: middle; padding:40px 0; margin-top:30px&quot;&gt;

&lt;ul&gt;
&lt;li&gt; Input: Similarity matrix, \(S \in \mathbb{R}^{n \times n}\), number k of clusters to construct.&lt;/li&gt;
&lt;li&gt; Construct a similarity graph by one of the ways described in Section 2. Let
W be its weighted adjacency matrix.&lt;/li&gt;
&lt;li&gt; Compute the unnormalized Laplacian L.&lt;/li&gt;
&lt;li&gt; Compute the first k eigenvectors $u_1,\dots,u_k$ of L&lt;/li&gt;
&lt;li&gt; Let \(U \in \mathbb{R}^{n\times k}\) be the matrix containing the vectors \(u_1,\dots,u_k\) as columns.&lt;/li&gt;
&lt;li&gt; For \(i= 1,\dots,n\), let \(y_i\in \mathbb{R}^k\) be the vector corresponding to the i-th row of U.&lt;/li&gt;
Cluster the points \((yi) i=1,\dots n\) in \(\mathbb{R}^k\) with the k-means algorithm into clusters \(C_1,\dots ,C_k\)
&lt;li&gt; Output: Clusters \(A_1,\dots,A_k\) with \(A_i=\{j|y_j\in C_i\}\).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;Compactness vs Connectivity&lt;/h2&gt;
&lt;p&gt;It is important to think conceptually about what you expect your data to look like when applying clustering algorithms.  With spectral clustering data is projected into a lower dimensional space where it is easily seperable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/index.png&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.cluster&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpectralClustering&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#file_sample is a list of filenames ... in this case html files&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'english'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Similarity_Matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;clusters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpectralClustering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Similarity_Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;affinity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'precomputed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fitted_clusters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clusters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Similarity_Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitted_clusters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sim_sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Similarity_Matrix&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitted_clusters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitted_clusters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sim_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Similarity_Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


  &lt;p&gt;&lt;a href=&quot;/spectral-clustering/&quot;&gt;Spectral clustering&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on October 04, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Dynamic Time Warping]]></title>
  <link rel="alternate" type="text/html" href="/sample-post/" />
  <id>/sample-post</id>
  <updated>2014-07-19T00:00:00-00:00</updated>
  <published>2014-07-20T00:00:00-04:00</published>
  
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Contents&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#dynamic-time-warping&quot; id=&quot;markdown-toc-dynamic-time-warping&quot;&gt;Dynamic Time Warping&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#temporal-semantic-analysis&quot; id=&quot;markdown-toc-temporal-semantic-analysis&quot;&gt;Temporal Semantic Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h2 id=&quot;dynamic-time-warping&quot;&gt;Dynamic Time Warping&lt;/h2&gt;

&lt;p&gt;Dyanmic Time Warping is technique which is often used in classification or clustering of time series.  DTW is used as a measure of similarity for two sequences.  In essence, the DTW algorithm stretches or compresses the sequences locally in order to make the two sequences resememble each other as closely as possible.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Suppose we have two time series which consist of &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; observations, these are often referred to as the “query” and the “reference” series.&lt;/p&gt;

&lt;center&gt;
$$x_t=x_1,x_2,x_3, \dots x_n$$
$$y_t=y_1,y_2,y_3, \dots y_m$$
&lt;/center&gt;

&lt;p&gt;We may define a function &lt;script type=&quot;math/tex&quot;&gt;f(x_i,y_j)=d(i,j) \geq 0&lt;/script&gt; as a local dissimilarity measure.  This is the only input required for the DTW algorithm.  Typically, euclidean distance is used as the dissimilarity measure, although there are other definitions which maybe useful as well.&lt;/p&gt;

&lt;p&gt;The key to DTW is what is known as a warping curve &lt;script type=&quot;math/tex&quot;&gt;\phi(k)=(\phi_x(k),\phi_y(k))&lt;/script&gt; which remap the time indices of &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;y&lt;/script&gt;.Given the warping curve, &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt;, one may compute the average acculmulated distance between two time series.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/RPlot02.png&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/warp.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;temporal-semantic-analysis&quot;&gt;Temporal Semantic Analysis&lt;/h2&gt;


  &lt;p&gt;&lt;a href=&quot;/sample-post/&quot;&gt;Dynamic Time Warping&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on July 20, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[d3 to svg]]></title>
  <link rel="alternate" type="text/html" href="/code-highlighting-post/" />
  <id>/code-highlighting-post</id>
  <published>2013-08-16T00:00:00-04:00</published>
  <updated>2013-08-16T00:00:00-04:00</updated>
  <author>
    <name>Graham Mueller</name>
    <uri></uri>
    <email>wgmueller@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I find it hilarious that I am actually doing this crap, but if you ever wanted to know how to render a svg generated by d3 into a downloadable pdf, png, whatever, here is one solution.  This is all based on the work done &lt;a href=&quot;http://d3export.housegordon.org&quot;&gt;here&lt;/a&gt;.  I couldn’t use the perl script on the server side because I’m using &lt;a href=&quot;http://tangelo.kitware.com&quot;&gt;Tangelo&lt;/a&gt; to develop prototype web applications.  At first, I thought I’d just call the perl script through subprocess or pyperl, but that was mainly because I didn’t want to spend anytime understanding what the perl script actually did.&lt;/p&gt;

&lt;h3 id=&quot;pygments-code-blocks&quot;&gt;Pygments Code Blocks&lt;/h3&gt;

&lt;p&gt;To modify styling and highlight colors edit &lt;code class=&quot;highlighter-rouge&quot;&gt;/assets/less/pygments.less&lt;/code&gt; and compile &lt;code class=&quot;highlighter-rouge&quot;&gt;main.less&lt;/code&gt; with your favorite preprocessor. Or edit &lt;code class=&quot;highlighter-rouge&quot;&gt;main.css&lt;/code&gt; if that’s your thing, the classes you want to modify all begin with &lt;code class=&quot;highlighter-rouge&quot;&gt;.highlight&lt;/code&gt;.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;/code-highlighting-post/&quot;&gt;d3 to svg&lt;/a&gt; was originally published by Graham Mueller at &lt;a href=&quot;&quot;&gt;Nullspace&lt;/a&gt; on August 16, 2013.&lt;/p&gt;</content>
</entry>

</feed>
